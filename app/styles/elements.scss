@use "_variables" as *;

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  transition: all 0.2s ease-out;
}

// text
@mixin text($size, $weight, $height) {
  font: {
    family: $family-default;
    size: $size;
    weight: $weight;
  };
  line-height: $height;
}

$text: (
  h1: (size: 3rem, weight: 700, height: 3.5rem),
  h2: (size: 2.5rem, weight: 600, height: 3rem),
  h3: (size: 2rem, weight: 600, height: 2.5rem),
  h4: (size: 1.5rem, weight: 600, height: 2rem),
  h5: (size: 1.25rem, weight: 600, height: 1.75rem),
  h6: (size: 1.125rem, weight: 600, height: 1.5rem),
  large: (size: 1.125rem, weight: 400, height: 1.75rem),
  body: (size: 1rem, weight: 400, height: 1.5rem),
  small: (size: 0.875rem, weight: 400, height: 1.25rem),
  caption: (size: 0.75rem, weight: 400, height: 1rem),
  button: (size: 1rem, weight: 500, height: 1.5rem),
);

@each $name, $props in $text {
  .#{$name} {
    @include text(
      map-get($props, size),
      map-get($props, weight),
      map-get($props, height)
    );
  }
}

// buttons
@mixin button() {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

$text-color-map: (
  $accent: $white,
  $white: $black,
  $black: $white
);
$text-color-hover-map: (
  $accent: $white-hover,
  $white: $black-hover,
  $black: $white-hover
);
$color-hover-map: (
  $accent: $accent-hover,
  $white: $white-hover,
  $black: $black-hover
);

@mixin button-background($color) {
  @include button();
  padding: $xs $sm;
  border-radius: $sm;
  color: map-get($text-color-map, $color);
  background-color: $color;
  &:hover {
    background-color: map-get($color-hover-map, $color);
    color: map-get($text-color-hover-map, $color);
  }
}

$buttons: (
  accent: $accent,
  white: $white,
  black: $black, 
);
@each $name, $color in $buttons {
  .button-#{$name} {
    @include button-background($color);
  }
}